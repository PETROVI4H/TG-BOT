import time
import telebot
import webbrowser
import pandas as pd
from telebot import types

bot = telebot.TeleBot('8131849234:AAEAduQ2nGxxaAgWRsW35nf9Lq1YoavNZfk')

bot.remove_webhook()

uploaded_file_path = None
df = None

@bot.message_handler(commands=['web'])
def site(message):
    bot.reply_to(message, '<b>Открытие...</b>', parse_mode='html')
    webbrowser.open('https://omni.top-academy.ru/login/index#/')

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('Перейти в Omni', url='https://omni.top-academy.ru/login/index#/'))
    bot.send_message(message.chat.id, f'Здравствуйте! {message.from_user.first_name} {message.from_user.last_name}', reply_markup=markup)

@bot.message_handler(commands=['help'])
def about(message):
    bot.send_message(message.chat.id, '<b><u>Help Information:</u></b>', parse_mode='html')
    time.sleep(2)
    bot.send_message(message.chat.id, '<b>Используйте кнопку перейти в OMNI внизу экрана или команду /start. Так же используйте /web для перехода на официальный сайт преподавателя OMNI. Загрузите файл EXEL, и бот автоматически распознает его, так же есть возможность сравнить текст введенный пользователем при помощи команды /compare, и уже имеющийся в файле, для получения больших результатов примера из таблицы, используйте</b>', parse_mode='html')

@bot.message_handler(content_types=['document'])
def handle_document(message):
    global uploaded_file_path, df

    file_info = bot.get_file(message.document.file_id)
    file = bot.download_file(file_info.file_path)

    with open("uploaded_file.xlsx", "wb") as f:
        f.write(file)

    try:
        df = pd.read_excel("uploaded_file.xlsx")
        uploaded_file_path = "uploaded_file.xlsx"

        bot.send_message(message.chat.id, f"Файл загружен. Пример данных:\n{df.head()}")
    except Exception as e:
        bot.send_message(message.chat.id, f"Ошибка при обработке файла: {e}")

@bot.message_handler(commands=['compare'])
def compare_text(message):
    global df

    if df is None:
        bot.send_message(message.chat.id, "Сначала загрузите файл EXEL")
        return

    bot.send_message(message.chat.id, "Введите текст для сравнения с данными из Excel:")

    bot.register_next_step_handler(message, process_comparison)

def process_comparison(message):
    global df

    user_text = message.text.strip()

    matching_rows = []

    for column in df.columns:
        column_data = df[column].astype(str)

        matching_column_rows = df[column_data.str.contains(user_text, na=False, case=False, regex=True)]

        if not matching_column_rows.empty:
            for index, row in matching_column_rows.iterrows():
                context = f"Столбец: {column}\n"
                context += f"Строка {index}: {row[column]}\n"

                matching_rows.append(context)

    if matching_rows:
        bot.send_message(message.chat.id, "Текст найден в Excel! Вот примеры:\n")
        for row in matching_rows[:5]:
            bot.send_message(message.chat.id, row)
        if len(matching_rows) > 5:
            bot.send_message(message.chat.id, "... и другие совпадения. Вы можете запросить больше.")
    else:
        bot.send_message(message.chat.id, "Текст не найден в Excel.")

@bot.message_handler()
def info(message):
    markup = types.InlineKeyboardMarkup()
    if message.text.lower() == 'привет':
        markup.add(types.InlineKeyboardButton('Перейти в Omni', url='https://omni.top-academy.ru/login/index#/'))
        bot.send_message(message.chat.id, f'Здравствуйте! {message.from_user.first_name} {message.from_user.last_name}', reply_markup=markup)
    elif message.text.lower() == '?':
        bot.send_message(message.chat.id, '<b><u>Help Information</u></b>', parse_mode='html')
    else:
        bot.send_message(message.chat.id, "Неизвестная команда. Пожалуйста, используйте команду /help для получения помощи.")

bot.polling(none_stop=True)
